from django.db import models
from django.contrib.auth.models import User

# Create your models here.
class UserProfile(models.Model):
    id_user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name="–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á")
    avatar = models.ImageField(upload_to='avatar', default='avatar/avatar_crj2ayQ.jpg')
    description = models.TextField(blank=True, verbose_name="–û–ø–∏—Å")
    wallet = models.DecimalField(max_digits=20, decimal_places=2, default=0, verbose_name="–ì–∞–º–∞–Ω–µ—Ü—å")
    secret = models.CharField(max_length=100, default="", verbose_name="–°–µ–∫—Ä–µ—Ç")

    def __str__(self):
        return f'–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è: {self.id_user}'

    class Meta:
        verbose_name = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –¥–æ–¥–∞—Ç–æ–∫"
        verbose_name_plural = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –¥–æ–¥–∞—Ç–æ–∫"



class Products(models.Model):
    name = models.CharField(max_length=50, verbose_name="–ù–∞–∑–≤–∞")
    img = models.ImageField(upload_to='avatar', default='product/avatar_crj2ayQ.jpg')
    description = models.TextField(blank=True, verbose_name="–û–ø–∏—Å")
    price = models.DecimalField(max_digits=10, decimal_places=2, verbose_name="–¶—ñ–Ω–∞ —Ç–æ–≤–∞—Ä—É")
    discont = models.DecimalField(max_digits=100, decimal_places=0, verbose_name="–ó–Ω–∏–∂–∫–∞")
    number = models.DecimalField(max_digits=10, decimal_places=0, default=0, verbose_name="–ü—Ä–æ–¥–∞–Ω–∏—Ö")

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = "–¢–æ–≤–∞—Ä"
        verbose_name_plural = "–¢–æ–≤–∞—Ä–∏"

class ProductKeys(models.Model):
    product = models.ForeignKey(Products, on_delete=models.CASCADE, verbose_name="–¢–æ–≤–∞—Ä")
    keys = models.TextField(blank=True, verbose_name="–ö–ª—é—á")

    def __str__(self):
        return f'–ö–ª—é—á—ñ: {self.product}'

    class Meta:
        verbose_name = "–ö–ª—é—á –¢–æ–≤–∞—Ä—É"
        verbose_name_plural = "–ö–ª—é—á—ñ –¢–æ–≤–∞—Ä—É"

class UserBuying(models.Model):
    id_user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name="–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á")
    product = models.ForeignKey(Products, on_delete=models.CASCADE, verbose_name="–¢–æ–≤–∞—Ä")
    keys = models.CharField(max_length=100, verbose_name="–ö–ª—é—á")
    price = models.DecimalField(max_digits=10, decimal_places=2, verbose_name="–¶—ñ–Ω–∞ —Ç–æ–≤–∞—Ä—É")
    timestamp = models.DateTimeField(auto_now_add=True)


    def __str__(self):
        return f'–ü–æ–∫—É–ø–∫–∞: {self.id_user}'

    class Meta:
        verbose_name = "–ü–æ–∫—É–ø–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"
        verbose_name_plural = "–ü–æ–∫—É–ø–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"

class Rules(models.Model):
    title = models.CharField(max_length=100, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    description = models.TextField(blank=True, verbose_name="–û–ø–∏—Å")

    def __str__(self):
        return f'–ü—Ä–∞–≤–∏–ª–æ: {self.title}'

    class Meta:
        verbose_name = "–ü—Ä–∞–≤–∏–ª–æ"
        verbose_name_plural = "–ü—Ä–∞–≤–∏–ª–∞"

class FAQ(models.Model):
    title = models.CharField(max_length=100, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    question = models.TextField(blank=True, verbose_name="–ü–∏—Ç–∞–Ω–Ω—è")
    answer = models.TextField(blank=True, verbose_name="–í—ñ–¥–ø–æ–≤—ñ–¥—å")

    def __str__(self):
        return f'–ó–∞–ø–∏—Ç–∞–Ω–Ω—è: {self.title}'

    class Meta:
        verbose_name = "üìä –ü–æ—à–∏—Ä–µ–Ω–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è"
        verbose_name_plural = "üìä –ü–æ—à–∏—Ä–µ–Ω—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è"

class ModeQuestion(models.Model):
    title = models.CharField(max_length=100, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    question = models.TextField(blank=True, verbose_name="–ü–∏—Ç–∞–Ω–Ω—è")
    answer = models.TextField(blank=True, verbose_name="–í—ñ–¥–ø–æ–≤—ñ–¥—å")

    def __str__(self):
        return f'–ü–∏—Ç–∞–Ω–Ω—è –ø–æ —Ä–µ–∂–∏–º—É: {self.title}'

    class Meta:
        verbose_name = "‚è≥ –ü–∏—Ç–∞–Ω–Ω—è –ø–æ —Ä–µ–∂–∏–º–∞–º"
        verbose_name_plural = "‚è≥ –ü–∏—Ç–∞–Ω–Ω—è –ø–æ —Ä–µ–∂–∏–º–∞–º"

class RareQuestion(models.Model):
    title = models.CharField(max_length=100, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    question = models.TextField(blank=True, verbose_name="–ü–∏—Ç–∞–Ω–Ω—è")
    answer = models.TextField(blank=True, verbose_name="–í—ñ–¥–ø–æ–≤—ñ–¥—å")

    def __str__(self):
        return f'–†—ñ–¥–∫—ñ—Å–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è: {self.title}'

    class Meta:
        verbose_name = "üïó –†—ñ–¥–∫—ñ—Å–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è"
        verbose_name_plural = "üïó –†—ñ–¥–∫—ñ—Å–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è"


class Question(models.Model):
    id_user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name="–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á")
    question = models.TextField(blank=True, verbose_name="–ü–∏—Ç–∞–Ω–Ω—è")
    timestamp = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f'–ó–∞–ø–∏—Ç–∞–Ω–Ω—è –≤—ñ–¥: {self.id_user}'

    class Meta:
        verbose_name = "üí¢ –ó–∞–ø–∏—Ç–∞–Ω–Ω—è"
        verbose_name_plural = "üí¢ –ó–∞–ø–∏—Ç–∞–Ω–Ω—è"

class Mode(models.Model):
    avatar = models.ImageField(upload_to='avatar', default='mode/mode.jpg')
    title = models.CharField(max_length=100, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    description = models.TextField(blank=True, verbose_name="–û–ø–∏—Å")


    def __str__(self):
        return f'–†–µ–∂–∏–º: {self.title}'

    class Meta:
        verbose_name = "–†–µ–∂–∏–º"
        verbose_name_plural = "–†–µ–∂–∏–º–∏"

